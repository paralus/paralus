// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: proto/types/sentry/sentry.proto

package sentry

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v3 "github.com/paralus/paralus/proto/types/commonpb/v3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BootstrapInfraType int32

const (
	BootstrapInfraType_ClusterBootstrapInfra BootstrapInfraType = 0
)

// Enum value maps for BootstrapInfraType.
var (
	BootstrapInfraType_name = map[int32]string{
		0: "ClusterBootstrapInfra",
	}
	BootstrapInfraType_value = map[string]int32{
		"ClusterBootstrapInfra": 0,
	}
)

func (x BootstrapInfraType) Enum() *BootstrapInfraType {
	p := new(BootstrapInfraType)
	*p = x
	return p
}

func (x BootstrapInfraType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BootstrapInfraType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_sentry_sentry_proto_enumTypes[0].Descriptor()
}

func (BootstrapInfraType) Type() protoreflect.EnumType {
	return &file_proto_types_sentry_sentry_proto_enumTypes[0]
}

func (x BootstrapInfraType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BootstrapInfraType.Descriptor instead.
func (BootstrapInfraType) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{0}
}

type BootstrapAgentType int32

const (
	BootstrapAgentType_ParalusConnector BootstrapAgentType = 0
	BootstrapAgentType_RelayAgent       BootstrapAgentType = 1
	BootstrapAgentType_PipelineAgent    BootstrapAgentType = 2
)

// Enum value maps for BootstrapAgentType.
var (
	BootstrapAgentType_name = map[int32]string{
		0: "ParalusConnector",
		1: "RelayAgent",
		2: "PipelineAgent",
	}
	BootstrapAgentType_value = map[string]int32{
		"ParalusConnector": 0,
		"RelayAgent":       1,
		"PipelineAgent":    2,
	}
)

func (x BootstrapAgentType) Enum() *BootstrapAgentType {
	p := new(BootstrapAgentType)
	*p = x
	return p
}

func (x BootstrapAgentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BootstrapAgentType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_sentry_sentry_proto_enumTypes[1].Descriptor()
}

func (BootstrapAgentType) Type() protoreflect.EnumType {
	return &file_proto_types_sentry_sentry_proto_enumTypes[1]
}

func (x BootstrapAgentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BootstrapAgentType.Descriptor instead.
func (BootstrapAgentType) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{1}
}

type BootstrapAgentMode int32

const (
	BootstrapAgentMode_InCluster    BootstrapAgentMode = 0
	BootstrapAgentMode_OutOfCluster BootstrapAgentMode = 1
)

// Enum value maps for BootstrapAgentMode.
var (
	BootstrapAgentMode_name = map[int32]string{
		0: "InCluster",
		1: "OutOfCluster",
	}
	BootstrapAgentMode_value = map[string]int32{
		"InCluster":    0,
		"OutOfCluster": 1,
	}
)

func (x BootstrapAgentMode) Enum() *BootstrapAgentMode {
	p := new(BootstrapAgentMode)
	*p = x
	return p
}

func (x BootstrapAgentMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BootstrapAgentMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_sentry_sentry_proto_enumTypes[2].Descriptor()
}

func (BootstrapAgentMode) Type() protoreflect.EnumType {
	return &file_proto_types_sentry_sentry_proto_enumTypes[2]
}

func (x BootstrapAgentMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BootstrapAgentMode.Descriptor instead.
func (BootstrapAgentMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{2}
}

type BootstrapAgentState int32

const (
	BootstrapAgentState_NotSet        BootstrapAgentState = 0
	BootstrapAgentState_NotRegistered BootstrapAgentState = 1
	BootstrapAgentState_NotApproved   BootstrapAgentState = 2
	BootstrapAgentState_Approved      BootstrapAgentState = 3
)

// Enum value maps for BootstrapAgentState.
var (
	BootstrapAgentState_name = map[int32]string{
		0: "NotSet",
		1: "NotRegistered",
		2: "NotApproved",
		3: "Approved",
	}
	BootstrapAgentState_value = map[string]int32{
		"NotSet":        0,
		"NotRegistered": 1,
		"NotApproved":   2,
		"Approved":      3,
	}
)

func (x BootstrapAgentState) Enum() *BootstrapAgentState {
	p := new(BootstrapAgentState)
	*p = x
	return p
}

func (x BootstrapAgentState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BootstrapAgentState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_sentry_sentry_proto_enumTypes[3].Descriptor()
}

func (BootstrapAgentState) Type() protoreflect.EnumType {
	return &file_proto_types_sentry_sentry_proto_enumTypes[3]
}

func (x BootstrapAgentState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BootstrapAgentState.Descriptor instead.
func (BootstrapAgentState) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{3}
}

type BootstrapAgentTemplateType int32

const (
	BootstrapAgentTemplateType_TemplateTypeNotSet BootstrapAgentTemplateType = 0
	BootstrapAgentTemplateType_Client             BootstrapAgentTemplateType = 1
	BootstrapAgentTemplateType_Server             BootstrapAgentTemplateType = 2
	BootstrapAgentTemplateType_Mixed              BootstrapAgentTemplateType = 3
)

// Enum value maps for BootstrapAgentTemplateType.
var (
	BootstrapAgentTemplateType_name = map[int32]string{
		0: "TemplateTypeNotSet",
		1: "Client",
		2: "Server",
		3: "Mixed",
	}
	BootstrapAgentTemplateType_value = map[string]int32{
		"TemplateTypeNotSet": 0,
		"Client":             1,
		"Server":             2,
		"Mixed":              3,
	}
)

func (x BootstrapAgentTemplateType) Enum() *BootstrapAgentTemplateType {
	p := new(BootstrapAgentTemplateType)
	*p = x
	return p
}

func (x BootstrapAgentTemplateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BootstrapAgentTemplateType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_sentry_sentry_proto_enumTypes[4].Descriptor()
}

func (BootstrapAgentTemplateType) Type() protoreflect.EnumType {
	return &file_proto_types_sentry_sentry_proto_enumTypes[4]
}

func (x BootstrapAgentTemplateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BootstrapAgentTemplateType.Descriptor instead.
func (BootstrapAgentTemplateType) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{4}
}

type BootstrapTemplateHostType int32

const (
	BootstrapTemplateHostType_HostTypeNotSet   BootstrapTemplateHostType = 0
	BootstrapTemplateHostType_HostTypeInternal BootstrapTemplateHostType = 1
	BootstrapTemplateHostType_HostTypeExternal BootstrapTemplateHostType = 2
)

// Enum value maps for BootstrapTemplateHostType.
var (
	BootstrapTemplateHostType_name = map[int32]string{
		0: "HostTypeNotSet",
		1: "HostTypeInternal",
		2: "HostTypeExternal",
	}
	BootstrapTemplateHostType_value = map[string]int32{
		"HostTypeNotSet":   0,
		"HostTypeInternal": 1,
		"HostTypeExternal": 2,
	}
)

func (x BootstrapTemplateHostType) Enum() *BootstrapTemplateHostType {
	p := new(BootstrapTemplateHostType)
	*p = x
	return p
}

func (x BootstrapTemplateHostType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BootstrapTemplateHostType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_types_sentry_sentry_proto_enumTypes[5].Descriptor()
}

func (BootstrapTemplateHostType) Type() protoreflect.EnumType {
	return &file_proto_types_sentry_sentry_proto_enumTypes[5]
}

func (x BootstrapTemplateHostType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BootstrapTemplateHostType.Descriptor instead.
func (BootstrapTemplateHostType) EnumDescriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{5}
}

type BootstrapInfraSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaCert    string `protobuf:"bytes,1,opt,name=caCert,proto3" json:"caCert,omitempty"`
	CaKey     string `protobuf:"bytes,2,opt,name=caKey,proto3" json:"caKey,omitempty"`
	CaKeyPass string `protobuf:"bytes,3,opt,name=caKeyPass,proto3" json:"caKeyPass,omitempty"`
}

func (x *BootstrapInfraSpec) Reset() {
	*x = BootstrapInfraSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_sentry_sentry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootstrapInfraSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapInfraSpec) ProtoMessage() {}

func (x *BootstrapInfraSpec) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_sentry_sentry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapInfraSpec.ProtoReflect.Descriptor instead.
func (*BootstrapInfraSpec) Descriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{0}
}

func (x *BootstrapInfraSpec) GetCaCert() string {
	if x != nil {
		return x.CaCert
	}
	return ""
}

func (x *BootstrapInfraSpec) GetCaKey() string {
	if x != nil {
		return x.CaKey
	}
	return ""
}

func (x *BootstrapInfraSpec) GetCaKeyPass() string {
	if x != nil {
		return x.CaKeyPass
	}
	return ""
}

type BootstrapInfraStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BootstrapInfraStatus) Reset() {
	*x = BootstrapInfraStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_sentry_sentry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootstrapInfraStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapInfraStatus) ProtoMessage() {}

func (x *BootstrapInfraStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_sentry_sentry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapInfraStatus.ProtoReflect.Descriptor instead.
func (*BootstrapInfraStatus) Descriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{1}
}

type BootstrapInfra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string                `protobuf:"bytes,1,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	Kind       string                `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v3.Metadata          `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *BootstrapInfraSpec   `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	Status     *BootstrapInfraStatus `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BootstrapInfra) Reset() {
	*x = BootstrapInfra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_sentry_sentry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootstrapInfra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapInfra) ProtoMessage() {}

func (x *BootstrapInfra) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_sentry_sentry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapInfra.ProtoReflect.Descriptor instead.
func (*BootstrapInfra) Descriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{2}
}

func (x *BootstrapInfra) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *BootstrapInfra) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *BootstrapInfra) GetMetadata() *v3.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *BootstrapInfra) GetSpec() *BootstrapInfraSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *BootstrapInfra) GetStatus() *BootstrapInfraStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type BootstrapInfraList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string            `protobuf:"bytes,1,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	Kind       string            `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v3.ListMetadata  `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Items      []*BootstrapInfra `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BootstrapInfraList) Reset() {
	*x = BootstrapInfraList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_sentry_sentry_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootstrapInfraList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapInfraList) ProtoMessage() {}

func (x *BootstrapInfraList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_sentry_sentry_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapInfraList.ProtoReflect.Descriptor instead.
func (*BootstrapInfraList) Descriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{3}
}

func (x *BootstrapInfraList) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *BootstrapInfraList) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *BootstrapInfraList) GetMetadata() *v3.ListMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *BootstrapInfraList) GetItems() []*BootstrapInfra {
	if x != nil {
		return x.Items
	}
	return nil
}

type BootstrapTemplateHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string                    `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Type BootstrapTemplateHostType `protobuf:"varint,2,opt,name=type,proto3,enum=paralus.dev.types.sentry.BootstrapTemplateHostType" json:"type,omitempty"`
}

func (x *BootstrapTemplateHost) Reset() {
	*x = BootstrapTemplateHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_sentry_sentry_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootstrapTemplateHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapTemplateHost) ProtoMessage() {}

func (x *BootstrapTemplateHost) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_sentry_sentry_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapTemplateHost.ProtoReflect.Descriptor instead.
func (*BootstrapTemplateHost) Descriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{4}
}

func (x *BootstrapTemplateHost) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *BootstrapTemplateHost) GetType() BootstrapTemplateHostType {
	if x != nil {
		return x.Type
	}
	return BootstrapTemplateHostType_HostTypeNotSet
}

type BootstrapAgentTemplateSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfraRef               string                     `protobuf:"bytes,1,opt,name=infraRef,proto3" json:"infraRef,omitempty"`
	AutoRegister           bool                       `protobuf:"varint,2,opt,name=autoRegister,proto3" json:"autoRegister,omitempty"`
	IgnoreMultipleRegister bool                       `protobuf:"varint,3,opt,name=ignoreMultipleRegister,proto3" json:"ignoreMultipleRegister,omitempty"`
	AutoApprove            bool                       `protobuf:"varint,4,opt,name=autoApprove,proto3" json:"autoApprove,omitempty"`
	TemplateType           BootstrapAgentTemplateType `protobuf:"varint,5,opt,name=templateType,proto3,enum=paralus.dev.types.sentry.BootstrapAgentTemplateType" json:"templateType,omitempty"`
	Token                  string                     `protobuf:"bytes,6,opt,name=token,proto3" json:"token,omitempty"`
	Hosts                  []*BootstrapTemplateHost   `protobuf:"bytes,7,rep,name=hosts,proto3" json:"hosts,omitempty"`
	InClusterTemplate      string                     `protobuf:"bytes,8,opt,name=inClusterTemplate,proto3" json:"inClusterTemplate,omitempty"`
	OutOfClusterTemplate   string                     `protobuf:"bytes,9,opt,name=outOfClusterTemplate,proto3" json:"outOfClusterTemplate,omitempty"`
}

func (x *BootstrapAgentTemplateSpec) Reset() {
	*x = BootstrapAgentTemplateSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_sentry_sentry_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootstrapAgentTemplateSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapAgentTemplateSpec) ProtoMessage() {}

func (x *BootstrapAgentTemplateSpec) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_sentry_sentry_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapAgentTemplateSpec.ProtoReflect.Descriptor instead.
func (*BootstrapAgentTemplateSpec) Descriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{5}
}

func (x *BootstrapAgentTemplateSpec) GetInfraRef() string {
	if x != nil {
		return x.InfraRef
	}
	return ""
}

func (x *BootstrapAgentTemplateSpec) GetAutoRegister() bool {
	if x != nil {
		return x.AutoRegister
	}
	return false
}

func (x *BootstrapAgentTemplateSpec) GetIgnoreMultipleRegister() bool {
	if x != nil {
		return x.IgnoreMultipleRegister
	}
	return false
}

func (x *BootstrapAgentTemplateSpec) GetAutoApprove() bool {
	if x != nil {
		return x.AutoApprove
	}
	return false
}

func (x *BootstrapAgentTemplateSpec) GetTemplateType() BootstrapAgentTemplateType {
	if x != nil {
		return x.TemplateType
	}
	return BootstrapAgentTemplateType_TemplateTypeNotSet
}

func (x *BootstrapAgentTemplateSpec) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *BootstrapAgentTemplateSpec) GetHosts() []*BootstrapTemplateHost {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *BootstrapAgentTemplateSpec) GetInClusterTemplate() string {
	if x != nil {
		return x.InClusterTemplate
	}
	return ""
}

func (x *BootstrapAgentTemplateSpec) GetOutOfClusterTemplate() string {
	if x != nil {
		return x.OutOfClusterTemplate
	}
	return ""
}

type BootstrapAgentTemplateStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BootstrapAgentTemplateStatus) Reset() {
	*x = BootstrapAgentTemplateStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_sentry_sentry_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootstrapAgentTemplateStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapAgentTemplateStatus) ProtoMessage() {}

func (x *BootstrapAgentTemplateStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_sentry_sentry_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapAgentTemplateStatus.ProtoReflect.Descriptor instead.
func (*BootstrapAgentTemplateStatus) Descriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{6}
}

type BootstrapAgentTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string                        `protobuf:"bytes,1,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	Kind       string                        `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v3.Metadata                  `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *BootstrapAgentTemplateSpec   `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	Status     *BootstrapAgentTemplateStatus `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BootstrapAgentTemplate) Reset() {
	*x = BootstrapAgentTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_sentry_sentry_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootstrapAgentTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapAgentTemplate) ProtoMessage() {}

func (x *BootstrapAgentTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_sentry_sentry_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapAgentTemplate.ProtoReflect.Descriptor instead.
func (*BootstrapAgentTemplate) Descriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{7}
}

func (x *BootstrapAgentTemplate) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *BootstrapAgentTemplate) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *BootstrapAgentTemplate) GetMetadata() *v3.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *BootstrapAgentTemplate) GetSpec() *BootstrapAgentTemplateSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *BootstrapAgentTemplate) GetStatus() *BootstrapAgentTemplateStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type BootstrapAgentTemplateList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string                    `protobuf:"bytes,1,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	Kind       string                    `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v3.ListMetadata          `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Items      []*BootstrapAgentTemplate `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BootstrapAgentTemplateList) Reset() {
	*x = BootstrapAgentTemplateList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_sentry_sentry_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootstrapAgentTemplateList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapAgentTemplateList) ProtoMessage() {}

func (x *BootstrapAgentTemplateList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_sentry_sentry_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapAgentTemplateList.ProtoReflect.Descriptor instead.
func (*BootstrapAgentTemplateList) Descriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{8}
}

func (x *BootstrapAgentTemplateList) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *BootstrapAgentTemplateList) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *BootstrapAgentTemplateList) GetMetadata() *v3.ListMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *BootstrapAgentTemplateList) GetItems() []*BootstrapAgentTemplate {
	if x != nil {
		return x.Items
	}
	return nil
}

type BootstrapAgentSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token       string             `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	TemplateRef string             `protobuf:"bytes,2,opt,name=templateRef,proto3" json:"templateRef,omitempty"`
	AgentMode   BootstrapAgentMode `protobuf:"varint,3,opt,name=agentMode,proto3,enum=paralus.dev.types.sentry.BootstrapAgentMode" json:"agentMode,omitempty"`
}

func (x *BootstrapAgentSpec) Reset() {
	*x = BootstrapAgentSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_sentry_sentry_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootstrapAgentSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapAgentSpec) ProtoMessage() {}

func (x *BootstrapAgentSpec) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_sentry_sentry_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapAgentSpec.ProtoReflect.Descriptor instead.
func (*BootstrapAgentSpec) Descriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{9}
}

func (x *BootstrapAgentSpec) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *BootstrapAgentSpec) GetTemplateRef() string {
	if x != nil {
		return x.TemplateRef
	}
	return ""
}

func (x *BootstrapAgentSpec) GetAgentMode() BootstrapAgentMode {
	if x != nil {
		return x.AgentMode
	}
	return BootstrapAgentMode_InCluster
}

type BootStrapAgentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenState    BootstrapAgentState    `protobuf:"varint,1,opt,name=tokenState,proto3,enum=paralus.dev.types.sentry.BootstrapAgentState" json:"tokenState,omitempty"`
	IpAddress     string                 `protobuf:"bytes,2,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	LastCheckedIn *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=lastCheckedIn,proto3" json:"lastCheckedIn,omitempty"`
	Fingerprint   string                 `protobuf:"bytes,4,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
}

func (x *BootStrapAgentStatus) Reset() {
	*x = BootStrapAgentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_sentry_sentry_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootStrapAgentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootStrapAgentStatus) ProtoMessage() {}

func (x *BootStrapAgentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_sentry_sentry_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootStrapAgentStatus.ProtoReflect.Descriptor instead.
func (*BootStrapAgentStatus) Descriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{10}
}

func (x *BootStrapAgentStatus) GetTokenState() BootstrapAgentState {
	if x != nil {
		return x.TokenState
	}
	return BootstrapAgentState_NotSet
}

func (x *BootStrapAgentStatus) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *BootStrapAgentStatus) GetLastCheckedIn() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCheckedIn
	}
	return nil
}

func (x *BootStrapAgentStatus) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

type BootstrapAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string                `protobuf:"bytes,1,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	Kind       string                `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v3.Metadata          `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec       *BootstrapAgentSpec   `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	Status     *BootStrapAgentStatus `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BootstrapAgent) Reset() {
	*x = BootstrapAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_sentry_sentry_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootstrapAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapAgent) ProtoMessage() {}

func (x *BootstrapAgent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_sentry_sentry_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapAgent.ProtoReflect.Descriptor instead.
func (*BootstrapAgent) Descriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{11}
}

func (x *BootstrapAgent) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *BootstrapAgent) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *BootstrapAgent) GetMetadata() *v3.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *BootstrapAgent) GetSpec() *BootstrapAgentSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *BootstrapAgent) GetStatus() *BootStrapAgentStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// BootstrapAgentList is a list of bootstrap agents
type BootstrapAgentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string            `protobuf:"bytes,1,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	Kind       string            `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Metadata   *v3.ListMetadata  `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Items      []*BootstrapAgent `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BootstrapAgentList) Reset() {
	*x = BootstrapAgentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_sentry_sentry_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootstrapAgentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapAgentList) ProtoMessage() {}

func (x *BootstrapAgentList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_sentry_sentry_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapAgentList.ProtoReflect.Descriptor instead.
func (*BootstrapAgentList) Descriptor() ([]byte, []int) {
	return file_proto_types_sentry_sentry_proto_rawDescGZIP(), []int{12}
}

func (x *BootstrapAgentList) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *BootstrapAgentList) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *BootstrapAgentList) GetMetadata() *v3.ListMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *BootstrapAgentList) GetItems() []*BootstrapAgent {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_proto_types_sentry_sentry_proto protoreflect.FileDescriptor

var file_proto_types_sentry_sentry_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x73, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x2f, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x18, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x70, 0x62, 0x2f, 0x76, 0x33, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x60, 0x0a, 0x12, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x49,
	0x6e, 0x66, 0x72, 0x61, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x43, 0x65,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x43, 0x65, 0x72, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x4b, 0x65, 0x79, 0x50,
	0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x4b, 0x65, 0x79,
	0x50, 0x61, 0x73, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61,
	0x70, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb3, 0x03, 0x0a,
	0x0e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x12,
	0x64, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x44, 0x92, 0x41, 0x41, 0x2a, 0x0b, 0x41, 0x50, 0x49, 0x20, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x1b, 0x41, 0x50, 0x49, 0x20, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x3a, 0x13, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6b, 0x38, 0x73, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x33, 0x40, 0x01, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x31, 0x92, 0x41, 0x2e, 0x2a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x32, 0x14,
	0x4b, 0x69, 0x6e, 0x64, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x3a, 0x0e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x49,
	0x6e, 0x66, 0x72, 0x61, 0x40, 0x01, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x6a, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x27, 0x92, 0x41, 0x24, 0x2a, 0x08, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73,
	0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x72, 0x61,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x61, 0x72,
	0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x49,
	0x6e, 0x66, 0x72, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x8a, 0x03, 0x0a, 0x12, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70,
	0x49, 0x6e, 0x66, 0x72, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x0a, 0x61, 0x70, 0x69,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x49, 0x92,
	0x41, 0x46, 0x2a, 0x0b, 0x41, 0x50, 0x49, 0x20, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32,
	0x20, 0x41, 0x50, 0x49, 0x20, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x3a, 0x13, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6b, 0x38, 0x73, 0x6d, 0x67, 0x6d, 0x74,
	0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x33, 0x40, 0x01, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x3a, 0x92, 0x41, 0x37, 0x2a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x32, 0x19, 0x4b,
	0x69, 0x6e, 0x64, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x12, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74,
	0x72, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x40, 0x01, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x79, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73,
	0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x32, 0x92, 0x41, 0x2f, 0x2a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x32, 0x1d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x40, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x3e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74,
	0x72, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x74, 0x0a, 0x15, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x70, 0x61, 0x72,
	0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xcf, 0x03, 0x0a, 0x1a, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74,
	0x72, 0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x52, 0x65, 0x66,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x52, 0x65, 0x66,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x16, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x58,
	0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e,
	0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x45,
	0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72,
	0x61, 0x70, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x05,
	0x68, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x69, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x6f, 0x75, 0x74, 0x4f, 0x66, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x6f, 0x75, 0x74, 0x4f, 0x66, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x42, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd3, 0x03, 0x0a, 0x16, 0x42, 0x6f, 0x6f, 0x74,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x12, 0x64, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x44, 0x92, 0x41, 0x41, 0x2a, 0x0b, 0x41, 0x50, 0x49,
	0x20, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x1b, 0x41, 0x50, 0x49, 0x20, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x13, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6b, 0x38, 0x73,
	0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x33, 0x40, 0x01, 0x52, 0x0a, 0x61, 0x70,
	0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x39, 0x92, 0x41, 0x36, 0x2a, 0x04, 0x4b, 0x69, 0x6e,
	0x64, 0x32, 0x14, 0x4b, 0x69, 0x6e, 0x64, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x16, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72,
	0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x40,
	0x01, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x6a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x61, 0x72, 0x61,
	0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x27, 0x92, 0x41, 0x24, 0x2a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x32,
	0x18, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f,
	0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x4e, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72,
	0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa2, 0x03,
	0x0a, 0x1a, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x0a,
	0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x49, 0x92, 0x41, 0x46, 0x2a, 0x0b, 0x41, 0x50, 0x49, 0x20, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x32, 0x20, 0x41, 0x50, 0x49, 0x20, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x3a, 0x13, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6b, 0x38, 0x73, 0x6d,
	0x67, 0x6d, 0x74, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x33, 0x40, 0x01, 0x52, 0x0a, 0x61, 0x70, 0x69,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x42, 0x92, 0x41, 0x3f, 0x2a, 0x04, 0x4b, 0x69, 0x6e, 0x64,
	0x32, 0x19, 0x4b, 0x69, 0x6e, 0x64, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69,
	0x73, 0x74, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x1a, 0x42, 0x6f, 0x6f,
	0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x40, 0x01, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12,
	0x79, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x33, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x32, 0x92, 0x41,
	0x2f, 0x2a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x32,
	0x1d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x40, 0x01,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x46, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x61, 0x72, 0x61,
	0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x12, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x66, 0x12, 0x4a, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e,
	0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xe7, 0x01,
	0x0a, 0x14, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x70, 0x61, 0x72,
	0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x40, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x64, 0x49, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x64, 0x49, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0xb3, 0x03, 0x0a, 0x0e, 0x42, 0x6f, 0x6f, 0x74,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x64, 0x0a, 0x0a, 0x61, 0x70,
	0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x44,
	0x92, 0x41, 0x41, 0x2a, 0x0b, 0x41, 0x50, 0x49, 0x20, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x32, 0x1b, 0x41, 0x50, 0x49, 0x20, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x13, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x6b, 0x38, 0x73, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x69, 0x6f, 0x2f,
	0x76, 0x33, 0x40, 0x01, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x45, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31,
	0x92, 0x41, 0x2e, 0x2a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x32, 0x14, 0x4b, 0x69, 0x6e, 0x64, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a,
	0x0e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x40,
	0x01, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x6a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x61, 0x72, 0x61,
	0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x27, 0x92, 0x41, 0x24, 0x2a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x32,
	0x18, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f,
	0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e,
	0x64, 0x65, 0x76, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8a, 0x03,
	0x0a, 0x12, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x49, 0x92, 0x41, 0x46, 0x2a, 0x0b, 0x41,
	0x50, 0x49, 0x20, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x20, 0x41, 0x50, 0x49, 0x20,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c,
	0x69, 0x73, 0x74, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x13, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2e, 0x6b, 0x38, 0x73, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x69, 0x6f, 0x2f, 0x76,
	0x33, 0x40, 0x01, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x4e, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3a, 0x92,
	0x41, 0x37, 0x2a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x32, 0x19, 0x4b, 0x69, 0x6e, 0x64, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x3a, 0x12, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x40, 0x01, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12,
	0x79, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x33, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x32, 0x92, 0x41,
	0x2f, 0x2a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x32,
	0x1d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x40, 0x01,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x61, 0x72, 0x61,
	0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2a, 0x2f, 0x0a, 0x12, 0x42, 0x6f,
	0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x19, 0x0a, 0x15, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x72, 0x61, 0x10, 0x00, 0x2a, 0x4d, 0x0a, 0x12, 0x42,
	0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x10, 0x02, 0x2a, 0x35, 0x0a, 0x12, 0x42, 0x6f,
	0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x0d, 0x0a, 0x09, 0x49, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x10,
	0x01, 0x2a, 0x53, 0x0a, 0x13, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x53,
	0x65, 0x74, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x6f, 0x74, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x10, 0x03, 0x2a, 0x57, 0x0a, 0x1a, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74,
	0x72, 0x61, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x53, 0x65, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x69, 0x78, 0x65, 0x64, 0x10, 0x03, 0x2a,
	0x5b, 0x0a, 0x19, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e,
	0x48, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x53, 0x65, 0x74, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x10, 0x02, 0x42, 0xde, 0x01, 0x0a,
	0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0b, 0x53,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73,
	0x2f, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0xa2, 0x02, 0x04, 0x50, 0x44,
	0x54, 0x53, 0xaa, 0x02, 0x18, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x76,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x72, 0x79, 0xca, 0x02, 0x18,
	0x50, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x5c, 0x44, 0x65, 0x76, 0x5c, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x5c, 0x53, 0x65, 0x6e, 0x74, 0x72, 0x79, 0xe2, 0x02, 0x24, 0x50, 0x61, 0x72, 0x61, 0x6c,
	0x75, 0x73, 0x5c, 0x44, 0x65, 0x76, 0x5c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x5c, 0x53, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x1b, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x3a, 0x3a, 0x44, 0x65, 0x76, 0x3a, 0x3a,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x3a, 0x3a, 0x53, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_types_sentry_sentry_proto_rawDescOnce sync.Once
	file_proto_types_sentry_sentry_proto_rawDescData = file_proto_types_sentry_sentry_proto_rawDesc
)

func file_proto_types_sentry_sentry_proto_rawDescGZIP() []byte {
	file_proto_types_sentry_sentry_proto_rawDescOnce.Do(func() {
		file_proto_types_sentry_sentry_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_types_sentry_sentry_proto_rawDescData)
	})
	return file_proto_types_sentry_sentry_proto_rawDescData
}

var file_proto_types_sentry_sentry_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_proto_types_sentry_sentry_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_types_sentry_sentry_proto_goTypes = []interface{}{
	(BootstrapInfraType)(0),              // 0: paralus.dev.types.sentry.BootstrapInfraType
	(BootstrapAgentType)(0),              // 1: paralus.dev.types.sentry.BootstrapAgentType
	(BootstrapAgentMode)(0),              // 2: paralus.dev.types.sentry.BootstrapAgentMode
	(BootstrapAgentState)(0),             // 3: paralus.dev.types.sentry.BootstrapAgentState
	(BootstrapAgentTemplateType)(0),      // 4: paralus.dev.types.sentry.BootstrapAgentTemplateType
	(BootstrapTemplateHostType)(0),       // 5: paralus.dev.types.sentry.BootstrapTemplateHostType
	(*BootstrapInfraSpec)(nil),           // 6: paralus.dev.types.sentry.BootstrapInfraSpec
	(*BootstrapInfraStatus)(nil),         // 7: paralus.dev.types.sentry.BootstrapInfraStatus
	(*BootstrapInfra)(nil),               // 8: paralus.dev.types.sentry.BootstrapInfra
	(*BootstrapInfraList)(nil),           // 9: paralus.dev.types.sentry.BootstrapInfraList
	(*BootstrapTemplateHost)(nil),        // 10: paralus.dev.types.sentry.BootstrapTemplateHost
	(*BootstrapAgentTemplateSpec)(nil),   // 11: paralus.dev.types.sentry.BootstrapAgentTemplateSpec
	(*BootstrapAgentTemplateStatus)(nil), // 12: paralus.dev.types.sentry.BootstrapAgentTemplateStatus
	(*BootstrapAgentTemplate)(nil),       // 13: paralus.dev.types.sentry.BootstrapAgentTemplate
	(*BootstrapAgentTemplateList)(nil),   // 14: paralus.dev.types.sentry.BootstrapAgentTemplateList
	(*BootstrapAgentSpec)(nil),           // 15: paralus.dev.types.sentry.BootstrapAgentSpec
	(*BootStrapAgentStatus)(nil),         // 16: paralus.dev.types.sentry.BootStrapAgentStatus
	(*BootstrapAgent)(nil),               // 17: paralus.dev.types.sentry.BootstrapAgent
	(*BootstrapAgentList)(nil),           // 18: paralus.dev.types.sentry.BootstrapAgentList
	(*v3.Metadata)(nil),                  // 19: paralus.dev.types.common.v3.Metadata
	(*v3.ListMetadata)(nil),              // 20: paralus.dev.types.common.v3.ListMetadata
	(*timestamppb.Timestamp)(nil),        // 21: google.protobuf.Timestamp
}
var file_proto_types_sentry_sentry_proto_depIdxs = []int32{
	19, // 0: paralus.dev.types.sentry.BootstrapInfra.metadata:type_name -> paralus.dev.types.common.v3.Metadata
	6,  // 1: paralus.dev.types.sentry.BootstrapInfra.spec:type_name -> paralus.dev.types.sentry.BootstrapInfraSpec
	7,  // 2: paralus.dev.types.sentry.BootstrapInfra.status:type_name -> paralus.dev.types.sentry.BootstrapInfraStatus
	20, // 3: paralus.dev.types.sentry.BootstrapInfraList.metadata:type_name -> paralus.dev.types.common.v3.ListMetadata
	8,  // 4: paralus.dev.types.sentry.BootstrapInfraList.items:type_name -> paralus.dev.types.sentry.BootstrapInfra
	5,  // 5: paralus.dev.types.sentry.BootstrapTemplateHost.type:type_name -> paralus.dev.types.sentry.BootstrapTemplateHostType
	4,  // 6: paralus.dev.types.sentry.BootstrapAgentTemplateSpec.templateType:type_name -> paralus.dev.types.sentry.BootstrapAgentTemplateType
	10, // 7: paralus.dev.types.sentry.BootstrapAgentTemplateSpec.hosts:type_name -> paralus.dev.types.sentry.BootstrapTemplateHost
	19, // 8: paralus.dev.types.sentry.BootstrapAgentTemplate.metadata:type_name -> paralus.dev.types.common.v3.Metadata
	11, // 9: paralus.dev.types.sentry.BootstrapAgentTemplate.spec:type_name -> paralus.dev.types.sentry.BootstrapAgentTemplateSpec
	12, // 10: paralus.dev.types.sentry.BootstrapAgentTemplate.status:type_name -> paralus.dev.types.sentry.BootstrapAgentTemplateStatus
	20, // 11: paralus.dev.types.sentry.BootstrapAgentTemplateList.metadata:type_name -> paralus.dev.types.common.v3.ListMetadata
	13, // 12: paralus.dev.types.sentry.BootstrapAgentTemplateList.items:type_name -> paralus.dev.types.sentry.BootstrapAgentTemplate
	2,  // 13: paralus.dev.types.sentry.BootstrapAgentSpec.agentMode:type_name -> paralus.dev.types.sentry.BootstrapAgentMode
	3,  // 14: paralus.dev.types.sentry.BootStrapAgentStatus.tokenState:type_name -> paralus.dev.types.sentry.BootstrapAgentState
	21, // 15: paralus.dev.types.sentry.BootStrapAgentStatus.lastCheckedIn:type_name -> google.protobuf.Timestamp
	19, // 16: paralus.dev.types.sentry.BootstrapAgent.metadata:type_name -> paralus.dev.types.common.v3.Metadata
	15, // 17: paralus.dev.types.sentry.BootstrapAgent.spec:type_name -> paralus.dev.types.sentry.BootstrapAgentSpec
	16, // 18: paralus.dev.types.sentry.BootstrapAgent.status:type_name -> paralus.dev.types.sentry.BootStrapAgentStatus
	20, // 19: paralus.dev.types.sentry.BootstrapAgentList.metadata:type_name -> paralus.dev.types.common.v3.ListMetadata
	17, // 20: paralus.dev.types.sentry.BootstrapAgentList.items:type_name -> paralus.dev.types.sentry.BootstrapAgent
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_proto_types_sentry_sentry_proto_init() }
func file_proto_types_sentry_sentry_proto_init() {
	if File_proto_types_sentry_sentry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_types_sentry_sentry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootstrapInfraSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_sentry_sentry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootstrapInfraStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_sentry_sentry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootstrapInfra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_sentry_sentry_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootstrapInfraList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_sentry_sentry_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootstrapTemplateHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_sentry_sentry_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootstrapAgentTemplateSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_sentry_sentry_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootstrapAgentTemplateStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_sentry_sentry_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootstrapAgentTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_sentry_sentry_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootstrapAgentTemplateList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_sentry_sentry_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootstrapAgentSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_sentry_sentry_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootStrapAgentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_sentry_sentry_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootstrapAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_sentry_sentry_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootstrapAgentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_types_sentry_sentry_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_types_sentry_sentry_proto_goTypes,
		DependencyIndexes: file_proto_types_sentry_sentry_proto_depIdxs,
		EnumInfos:         file_proto_types_sentry_sentry_proto_enumTypes,
		MessageInfos:      file_proto_types_sentry_sentry_proto_msgTypes,
	}.Build()
	File_proto_types_sentry_sentry_proto = out.File
	file_proto_types_sentry_sentry_proto_rawDesc = nil
	file_proto_types_sentry_sentry_proto_goTypes = nil
	file_proto_types_sentry_sentry_proto_depIdxs = nil
}
