// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: proto/rpc/sentry/kubectl_cluster.proto

package sentry

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v3 "github.com/paralus/paralus/proto/types/commonpb/v3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateKubectlClusterSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opts              *v3.QueryOptions `protobuf:"bytes,1,opt,name=opts,proto3" json:"opts,omitempty"`
	DisableWebKubectl bool             `protobuf:"varint,2,opt,name=disableWebKubectl,proto3" json:"disableWebKubectl,omitempty"`
	DisableCLIKubectl bool             `protobuf:"varint,3,opt,name=disableCLIKubectl,proto3" json:"disableCLIKubectl,omitempty"`
}

func (x *UpdateKubectlClusterSettingsRequest) Reset() {
	*x = UpdateKubectlClusterSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_sentry_kubectl_cluster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKubectlClusterSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKubectlClusterSettingsRequest) ProtoMessage() {}

func (x *UpdateKubectlClusterSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_sentry_kubectl_cluster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKubectlClusterSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateKubectlClusterSettingsRequest) Descriptor() ([]byte, []int) {
	return file_proto_rpc_sentry_kubectl_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateKubectlClusterSettingsRequest) GetOpts() *v3.QueryOptions {
	if x != nil {
		return x.Opts
	}
	return nil
}

func (x *UpdateKubectlClusterSettingsRequest) GetDisableWebKubectl() bool {
	if x != nil {
		return x.DisableWebKubectl
	}
	return false
}

func (x *UpdateKubectlClusterSettingsRequest) GetDisableCLIKubectl() bool {
	if x != nil {
		return x.DisableCLIKubectl
	}
	return false
}

type UpdateKubectlClusterSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateKubectlClusterSettingsResponse) Reset() {
	*x = UpdateKubectlClusterSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_sentry_kubectl_cluster_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKubectlClusterSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKubectlClusterSettingsResponse) ProtoMessage() {}

func (x *UpdateKubectlClusterSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_sentry_kubectl_cluster_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKubectlClusterSettingsResponse.ProtoReflect.Descriptor instead.
func (*UpdateKubectlClusterSettingsResponse) Descriptor() ([]byte, []int) {
	return file_proto_rpc_sentry_kubectl_cluster_proto_rawDescGZIP(), []int{1}
}

type GetKubectlClusterSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opts *v3.QueryOptions `protobuf:"bytes,1,opt,name=opts,proto3" json:"opts,omitempty"`
}

func (x *GetKubectlClusterSettingsRequest) Reset() {
	*x = GetKubectlClusterSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_sentry_kubectl_cluster_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKubectlClusterSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKubectlClusterSettingsRequest) ProtoMessage() {}

func (x *GetKubectlClusterSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_sentry_kubectl_cluster_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKubectlClusterSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetKubectlClusterSettingsRequest) Descriptor() ([]byte, []int) {
	return file_proto_rpc_sentry_kubectl_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *GetKubectlClusterSettingsRequest) GetOpts() *v3.QueryOptions {
	if x != nil {
		return x.Opts
	}
	return nil
}

type GetKubectlClusterSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisableWebKubectl bool `protobuf:"varint,1,opt,name=disableWebKubectl,proto3" json:"disableWebKubectl,omitempty"`
	DisableCLIKubectl bool `protobuf:"varint,2,opt,name=disableCLIKubectl,proto3" json:"disableCLIKubectl,omitempty"`
}

func (x *GetKubectlClusterSettingsResponse) Reset() {
	*x = GetKubectlClusterSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_rpc_sentry_kubectl_cluster_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKubectlClusterSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKubectlClusterSettingsResponse) ProtoMessage() {}

func (x *GetKubectlClusterSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rpc_sentry_kubectl_cluster_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKubectlClusterSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetKubectlClusterSettingsResponse) Descriptor() ([]byte, []int) {
	return file_proto_rpc_sentry_kubectl_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *GetKubectlClusterSettingsResponse) GetDisableWebKubectl() bool {
	if x != nil {
		return x.DisableWebKubectl
	}
	return false
}

func (x *GetKubectlClusterSettingsResponse) GetDisableCLIKubectl() bool {
	if x != nil {
		return x.DisableCLIKubectl
	}
	return false
}

var File_proto_rpc_sentry_kubectl_cluster_proto protoreflect.FileDescriptor

var file_proto_rpc_sentry_kubectl_cluster_proto_rawDesc = []byte{
	0x0a, 0x26, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75,
	0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x72, 0x70, 0x63,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x70, 0x62, 0x2f, 0x76, 0x33, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x01, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x63, 0x74, 0x6c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x04,
	0x6f, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x61, 0x72,
	0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x33, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x65, 0x62, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x57,
	0x65, 0x62, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x4c, 0x49, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x4c, 0x49,
	0x4b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c, 0x22, 0x26, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x61, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x33, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x6f, 0x70,
	0x74, 0x73, 0x22, 0x7f, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x57, 0x65, 0x62, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x65, 0x62, 0x4b, 0x75,
	0x62, 0x65, 0x63, 0x74, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x4c, 0x49, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x4c, 0x49, 0x4b, 0x75, 0x62, 0x65,
	0x63, 0x74, 0x6c, 0x32, 0xcf, 0x03, 0x0a, 0x1d, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xdb, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3b, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73,
	0x2e, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65,
	0x76, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x3a, 0x01, 0x2a, 0x1a, 0x35, 0x2f, 0x76,
	0x32, 0x2f, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c,
	0x2f, 0x7b, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x75, 0x72, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x3d,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x2a, 0x7d, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0xcf, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x63,
	0x74, 0x6c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x38, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e,
	0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x75,
	0x62, 0x65, 0x63, 0x74, 0x6c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x70, 0x61,
	0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x35,
	0x2f, 0x76, 0x32, 0x2f, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x63,
	0x74, 0x6c, 0x2f, 0x7b, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x75, 0x72, 0x6c, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x3d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x2a, 0x7d, 0x2f, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0xff, 0x04, 0x92, 0x41, 0xa1, 0x03, 0x12, 0x3b, 0x0a, 0x25,
	0x53, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x4b, 0x75, 0x62, 0x65, 0x63, 0x74, 0x6c, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x20, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73,
	0x20, 0x44, 0x65, 0x76, 0x32, 0x03, 0x32, 0x2e, 0x30, 0x2a, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x32, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73,
	0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x79, 0x61, 0x6d, 0x6c, 0x52, 0x50, 0x0a, 0x03, 0x34, 0x30, 0x33, 0x12, 0x49, 0x0a, 0x47, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x64, 0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x68,
	0x61, 0x76, 0x65, 0x20, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x74,
	0x6f, 0x20, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x3b, 0x0a, 0x03, 0x34, 0x30, 0x34, 0x12, 0x34, 0x0a,
	0x2a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x64, 0x6f, 0x65, 0x73,
	0x20, 0x6e, 0x6f, 0x74, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x2e, 0x12, 0x06, 0x0a, 0x04, 0x9a,
	0x02, 0x01, 0x07, 0x5a, 0x55, 0x0a, 0x1f, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x11, 0x08, 0x02, 0x1a, 0x0b, 0x58, 0x2d, 0x41, 0x50, 0x49, 0x2d, 0x4b,
	0x45, 0x59, 0x49, 0x44, 0x20, 0x02, 0x0a, 0x21, 0x0a, 0x0c, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x12, 0x11, 0x08, 0x02, 0x1a, 0x0b, 0x58, 0x2d, 0x41, 0x50,
	0x49, 0x2d, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x20, 0x02, 0x0a, 0x0f, 0x0a, 0x09, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x12, 0x02, 0x08, 0x01, 0x62, 0x31, 0x0a, 0x0e, 0x0a, 0x0a,
	0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x0a, 0x10, 0x0a, 0x0c,
	0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x0a, 0x0d,
	0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00, 0x0a, 0x1a, 0x63,
	0x6f, 0x6d, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x73,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x42, 0x13, 0x4b, 0x75, 0x62, 0x65, 0x63,
	0x74, 0x6c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x61, 0x72,
	0x61, 0x6c, 0x75, 0x73, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0xa2, 0x02, 0x04,
	0x50, 0x44, 0x53, 0x52, 0xaa, 0x02, 0x16, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x2e, 0x44,
	0x65, 0x76, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x52, 0x70, 0x63, 0xca, 0x02, 0x16,
	0x50, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73, 0x5c, 0x44, 0x65, 0x76, 0x5c, 0x53, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x5c, 0x52, 0x70, 0x63, 0xe2, 0x02, 0x22, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x75, 0x73,
	0x5c, 0x44, 0x65, 0x76, 0x5c, 0x53, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5c, 0x52, 0x70, 0x63, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x19, 0x50, 0x61,
	0x72, 0x61, 0x6c, 0x75, 0x73, 0x3a, 0x3a, 0x44, 0x65, 0x76, 0x3a, 0x3a, 0x53, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x3a, 0x3a, 0x52, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_rpc_sentry_kubectl_cluster_proto_rawDescOnce sync.Once
	file_proto_rpc_sentry_kubectl_cluster_proto_rawDescData = file_proto_rpc_sentry_kubectl_cluster_proto_rawDesc
)

func file_proto_rpc_sentry_kubectl_cluster_proto_rawDescGZIP() []byte {
	file_proto_rpc_sentry_kubectl_cluster_proto_rawDescOnce.Do(func() {
		file_proto_rpc_sentry_kubectl_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_rpc_sentry_kubectl_cluster_proto_rawDescData)
	})
	return file_proto_rpc_sentry_kubectl_cluster_proto_rawDescData
}

var file_proto_rpc_sentry_kubectl_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_rpc_sentry_kubectl_cluster_proto_goTypes = []interface{}{
	(*UpdateKubectlClusterSettingsRequest)(nil),  // 0: paralus.dev.sentry.rpc.UpdateKubectlClusterSettingsRequest
	(*UpdateKubectlClusterSettingsResponse)(nil), // 1: paralus.dev.sentry.rpc.UpdateKubectlClusterSettingsResponse
	(*GetKubectlClusterSettingsRequest)(nil),     // 2: paralus.dev.sentry.rpc.GetKubectlClusterSettingsRequest
	(*GetKubectlClusterSettingsResponse)(nil),    // 3: paralus.dev.sentry.rpc.GetKubectlClusterSettingsResponse
	(*v3.QueryOptions)(nil),                      // 4: paralus.dev.types.common.v3.QueryOptions
}
var file_proto_rpc_sentry_kubectl_cluster_proto_depIdxs = []int32{
	4, // 0: paralus.dev.sentry.rpc.UpdateKubectlClusterSettingsRequest.opts:type_name -> paralus.dev.types.common.v3.QueryOptions
	4, // 1: paralus.dev.sentry.rpc.GetKubectlClusterSettingsRequest.opts:type_name -> paralus.dev.types.common.v3.QueryOptions
	0, // 2: paralus.dev.sentry.rpc.KubectlClusterSettingsService.UpdateKubectlClusterSettings:input_type -> paralus.dev.sentry.rpc.UpdateKubectlClusterSettingsRequest
	2, // 3: paralus.dev.sentry.rpc.KubectlClusterSettingsService.GetKubectlClusterSettings:input_type -> paralus.dev.sentry.rpc.GetKubectlClusterSettingsRequest
	1, // 4: paralus.dev.sentry.rpc.KubectlClusterSettingsService.UpdateKubectlClusterSettings:output_type -> paralus.dev.sentry.rpc.UpdateKubectlClusterSettingsResponse
	3, // 5: paralus.dev.sentry.rpc.KubectlClusterSettingsService.GetKubectlClusterSettings:output_type -> paralus.dev.sentry.rpc.GetKubectlClusterSettingsResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_rpc_sentry_kubectl_cluster_proto_init() }
func file_proto_rpc_sentry_kubectl_cluster_proto_init() {
	if File_proto_rpc_sentry_kubectl_cluster_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_rpc_sentry_kubectl_cluster_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKubectlClusterSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rpc_sentry_kubectl_cluster_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKubectlClusterSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rpc_sentry_kubectl_cluster_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKubectlClusterSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_rpc_sentry_kubectl_cluster_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKubectlClusterSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_rpc_sentry_kubectl_cluster_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_rpc_sentry_kubectl_cluster_proto_goTypes,
		DependencyIndexes: file_proto_rpc_sentry_kubectl_cluster_proto_depIdxs,
		MessageInfos:      file_proto_rpc_sentry_kubectl_cluster_proto_msgTypes,
	}.Build()
	File_proto_rpc_sentry_kubectl_cluster_proto = out.File
	file_proto_rpc_sentry_kubectl_cluster_proto_rawDesc = nil
	file_proto_rpc_sentry_kubectl_cluster_proto_goTypes = nil
	file_proto_rpc_sentry_kubectl_cluster_proto_depIdxs = nil
}
